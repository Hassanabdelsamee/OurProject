//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EFDay1Demo
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DBMRCodeneWV2Entities : DbContext
    {
        public DBMRCodeneWV2Entities()
            : base("name=DBMRCodeneWV2Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cash> Cashes { get; set; }
        public virtual DbSet<CatogaryDetail> CatogaryDetails { get; set; }
        public virtual DbSet<Catogary> Catogarys { get; set; }
        public virtual DbSet<EmpAttendance> EmpAttendances { get; set; }
        public virtual DbSet<EmpLeaf> EmpLeaves { get; set; }
        public virtual DbSet<Employe> Employes { get; set; }
        public virtual DbSet<ExamResult> ExamResults { get; set; }
        public virtual DbSet<Exam> Exams { get; set; }
        public virtual DbSet<Expense> Expenses { get; set; }
        public virtual DbSet<ExpenseType> ExpenseTypes { get; set; }
        public virtual DbSet<Job> Jobs { get; set; }
        public virtual DbSet<NewRegistration> NewRegistrations { get; set; }
        public virtual DbSet<OPenningValue> OPenningValues { get; set; }
        public virtual DbSet<OperationsLog> OperationsLogs { get; set; }
        public virtual DbSet<Page> Pages { get; set; }
        public virtual DbSet<PayCatExpnce> PayCatExpnces { get; set; }
        public virtual DbSet<Section> Sections { get; set; }
        public virtual DbSet<Stage> Stages { get; set; }
        public virtual DbSet<StudentAttendance> StudentAttendances { get; set; }
        public virtual DbSet<StudentCat> StudentCats { get; set; }
        public virtual DbSet<StudentLeaf> StudentLeaves { get; set; }
        public virtual DbSet<StudentPaye> StudentPayes { get; set; }
        public virtual DbSet<StudentPaysNew> StudentPaysNews { get; set; }
        public virtual DbSet<StudentReturn> StudentReturns { get; set; }
        public virtual DbSet<Student> Students { get; set; }
        public virtual DbSet<Subject> Subjects { get; set; }
        public virtual DbSet<UserPermission> UserPermissions { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual int Add_Empatendance(Nullable<System.DateTime> date, Nullable<int> empid)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_Empatendance", dateParameter, empidParameter);
        }
    
        public virtual int Add_EmpLeave(Nullable<System.DateTime> date, Nullable<int> empid)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_EmpLeave", dateParameter, empidParameter);
        }
    
        public virtual int Add_Studentatendance(Nullable<System.DateTime> date, Nullable<int> stuid, Nullable<int> catid, string status)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var stuidParameter = stuid.HasValue ?
                new ObjectParameter("stuid", stuid) :
                new ObjectParameter("stuid", typeof(int));
    
            var catidParameter = catid.HasValue ?
                new ObjectParameter("catid", catid) :
                new ObjectParameter("catid", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_Studentatendance", dateParameter, stuidParameter, catidParameter, statusParameter);
        }
    
        public virtual int Add_StudentatendanceBybarcode(Nullable<System.DateTime> date, string barcode, string status)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var barcodeParameter = barcode != null ?
                new ObjectParameter("barcode", barcode) :
                new ObjectParameter("barcode", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_StudentatendanceBybarcode", dateParameter, barcodeParameter, statusParameter);
        }
    
        public virtual int AddAttendance(Nullable<System.DateTime> date, Nullable<int> empid)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddAttendance", dateParameter, empidParameter);
        }
    
        public virtual int addCatogaryDetails(string day, string time, Nullable<System.DateTime> datee)
        {
            var dayParameter = day != null ?
                new ObjectParameter("day", day) :
                new ObjectParameter("day", typeof(string));
    
            var timeParameter = time != null ?
                new ObjectParameter("time", time) :
                new ObjectParameter("time", typeof(string));
    
            var dateeParameter = datee.HasValue ?
                new ObjectParameter("datee", datee) :
                new ObjectParameter("datee", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addCatogaryDetails", dayParameter, timeParameter, dateeParameter);
        }
    
        public virtual int addCatogaryDetailsNew(string day, string time, Nullable<System.DateTime> datee, Nullable<int> catid)
        {
            var dayParameter = day != null ?
                new ObjectParameter("day", day) :
                new ObjectParameter("day", typeof(string));
    
            var timeParameter = time != null ?
                new ObjectParameter("time", time) :
                new ObjectParameter("time", typeof(string));
    
            var dateeParameter = datee.HasValue ?
                new ObjectParameter("datee", datee) :
                new ObjectParameter("datee", typeof(System.DateTime));
    
            var catidParameter = catid.HasValue ?
                new ObjectParameter("catid", catid) :
                new ObjectParameter("catid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addCatogaryDetailsNew", dayParameter, timeParameter, dateeParameter, catidParameter);
        }
    
        public virtual int addcatogeries(string name, Nullable<int> stageid, Nullable<int> sectionid, Nullable<decimal> cost, Nullable<int> subid, Nullable<int> empid, Nullable<int> payedway)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var stageidParameter = stageid.HasValue ?
                new ObjectParameter("stageid", stageid) :
                new ObjectParameter("stageid", typeof(int));
    
            var sectionidParameter = sectionid.HasValue ?
                new ObjectParameter("sectionid", sectionid) :
                new ObjectParameter("sectionid", typeof(int));
    
            var costParameter = cost.HasValue ?
                new ObjectParameter("cost", cost) :
                new ObjectParameter("cost", typeof(decimal));
    
            var subidParameter = subid.HasValue ?
                new ObjectParameter("subid", subid) :
                new ObjectParameter("subid", typeof(int));
    
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            var payedwayParameter = payedway.HasValue ?
                new ObjectParameter("payedway", payedway) :
                new ObjectParameter("payedway", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addcatogeries", nameParameter, stageidParameter, sectionidParameter, costParameter, subidParameter, empidParameter, payedwayParameter);
        }
    
        public virtual int ADDEmpAttendance(Nullable<System.DateTime> date, Nullable<int> empid)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var empidParameter = empid.HasValue ?
                new ObjectParameter("Empid", empid) :
                new ObjectParameter("Empid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ADDEmpAttendance", dateParameter, empidParameter);
        }
    
        public virtual int ADDEmpLEave(Nullable<System.DateTime> date, Nullable<int> empid)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var empidParameter = empid.HasValue ?
                new ObjectParameter("Empid", empid) :
                new ObjectParameter("Empid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ADDEmpLEave", dateParameter, empidParameter);
        }
    
        public virtual int AddEmpolyee(string name, string phone, string ssn, string address, Nullable<int> user_id, Nullable<int> job_id, Nullable<decimal> salary, Nullable<int> user_id2)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var ssnParameter = ssn != null ?
                new ObjectParameter("ssn", ssn) :
                new ObjectParameter("ssn", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var job_idParameter = job_id.HasValue ?
                new ObjectParameter("job_id", job_id) :
                new ObjectParameter("job_id", typeof(int));
    
            var salaryParameter = salary.HasValue ?
                new ObjectParameter("salary", salary) :
                new ObjectParameter("salary", typeof(decimal));
    
            var user_id2Parameter = user_id2.HasValue ?
                new ObjectParameter("user_id2", user_id2) :
                new ObjectParameter("user_id2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddEmpolyee", nameParameter, phoneParameter, ssnParameter, addressParameter, user_idParameter, job_idParameter, salaryParameter, user_id2Parameter);
        }
    
        public virtual int AddExam(string name, Nullable<decimal> high, Nullable<decimal> low)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var highParameter = high.HasValue ?
                new ObjectParameter("high", high) :
                new ObjectParameter("high", typeof(decimal));
    
            var lowParameter = low.HasValue ?
                new ObjectParameter("low", low) :
                new ObjectParameter("low", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddExam", nameParameter, highParameter, lowParameter);
        }
    
        public virtual int AddExamResults(Nullable<int> stuid, Nullable<int> examid, Nullable<decimal> degree, Nullable<System.DateTime> date)
        {
            var stuidParameter = stuid.HasValue ?
                new ObjectParameter("stuid", stuid) :
                new ObjectParameter("stuid", typeof(int));
    
            var examidParameter = examid.HasValue ?
                new ObjectParameter("examid", examid) :
                new ObjectParameter("examid", typeof(int));
    
            var degreeParameter = degree.HasValue ?
                new ObjectParameter("degree", degree) :
                new ObjectParameter("degree", typeof(decimal));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddExamResults", stuidParameter, examidParameter, degreeParameter, dateParameter);
        }
    
        public virtual int addPerUser(Nullable<int> userid, Nullable<int> pageid, Nullable<int> user_ID)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var pageidParameter = pageid.HasValue ?
                new ObjectParameter("pageid", pageid) :
                new ObjectParameter("pageid", typeof(int));
    
            var user_IDParameter = user_ID.HasValue ?
                new ObjectParameter("User_ID", user_ID) :
                new ObjectParameter("User_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addPerUser", useridParameter, pageidParameter, user_IDParameter);
        }
    
        public virtual int ADDRRegistration(Nullable<System.DateTime> date, Nullable<int> stuid, Nullable<decimal> totalvalue, Nullable<decimal> discount, Nullable<decimal> netvalue, Nullable<decimal> paid, Nullable<decimal> remaining, Nullable<int> cashid)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var stuidParameter = stuid.HasValue ?
                new ObjectParameter("stuid", stuid) :
                new ObjectParameter("stuid", typeof(int));
    
            var totalvalueParameter = totalvalue.HasValue ?
                new ObjectParameter("totalvalue", totalvalue) :
                new ObjectParameter("totalvalue", typeof(decimal));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("Discount", discount) :
                new ObjectParameter("Discount", typeof(decimal));
    
            var netvalueParameter = netvalue.HasValue ?
                new ObjectParameter("Netvalue", netvalue) :
                new ObjectParameter("Netvalue", typeof(decimal));
    
            var paidParameter = paid.HasValue ?
                new ObjectParameter("paid", paid) :
                new ObjectParameter("paid", typeof(decimal));
    
            var remainingParameter = remaining.HasValue ?
                new ObjectParameter("remaining", remaining) :
                new ObjectParameter("remaining", typeof(decimal));
    
            var cashidParameter = cashid.HasValue ?
                new ObjectParameter("cashid", cashid) :
                new ObjectParameter("cashid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ADDRRegistration", dateParameter, stuidParameter, totalvalueParameter, discountParameter, netvalueParameter, paidParameter, remainingParameter, cashidParameter);
        }
    
        public virtual int AddSection(Nullable<int> satageid, string name)
        {
            var satageidParameter = satageid.HasValue ?
                new ObjectParameter("satageid", satageid) :
                new ObjectParameter("satageid", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddSection", satageidParameter, nameParameter);
        }
    
        public virtual int AddStages(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddStages", nameParameter);
        }
    
        public virtual int ADDStuAttendance(Nullable<System.DateTime> date, Nullable<int> stuid)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var stuidParameter = stuid.HasValue ?
                new ObjectParameter("Stuid", stuid) :
                new ObjectParameter("Stuid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ADDStuAttendance", dateParameter, stuidParameter);
        }
    
        public virtual int AddStudent(Nullable<int> satageid, Nullable<int> sectionid, string name, string address, string school, string phone1, string phone2, string notes, string barcode, Nullable<int> catid, Nullable<int> status)
        {
            var satageidParameter = satageid.HasValue ?
                new ObjectParameter("satageid", satageid) :
                new ObjectParameter("satageid", typeof(int));
    
            var sectionidParameter = sectionid.HasValue ?
                new ObjectParameter("sectionid", sectionid) :
                new ObjectParameter("sectionid", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var schoolParameter = school != null ?
                new ObjectParameter("school", school) :
                new ObjectParameter("school", typeof(string));
    
            var phone1Parameter = phone1 != null ?
                new ObjectParameter("Phone1", phone1) :
                new ObjectParameter("Phone1", typeof(string));
    
            var phone2Parameter = phone2 != null ?
                new ObjectParameter("Phone2", phone2) :
                new ObjectParameter("Phone2", typeof(string));
    
            var notesParameter = notes != null ?
                new ObjectParameter("notes", notes) :
                new ObjectParameter("notes", typeof(string));
    
            var barcodeParameter = barcode != null ?
                new ObjectParameter("barcode", barcode) :
                new ObjectParameter("barcode", typeof(string));
    
            var catidParameter = catid.HasValue ?
                new ObjectParameter("catid", catid) :
                new ObjectParameter("catid", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddStudent", satageidParameter, sectionidParameter, nameParameter, addressParameter, schoolParameter, phone1Parameter, phone2Parameter, notesParameter, barcodeParameter, catidParameter, statusParameter);
        }
    
        public virtual int AddStudentBycode(Nullable<int> satageid, Nullable<int> sectionid, string name, string address, string school, string phone1, string phone2, string notes, string barcode, Nullable<int> catid)
        {
            var satageidParameter = satageid.HasValue ?
                new ObjectParameter("satageid", satageid) :
                new ObjectParameter("satageid", typeof(int));
    
            var sectionidParameter = sectionid.HasValue ?
                new ObjectParameter("sectionid", sectionid) :
                new ObjectParameter("sectionid", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var schoolParameter = school != null ?
                new ObjectParameter("school", school) :
                new ObjectParameter("school", typeof(string));
    
            var phone1Parameter = phone1 != null ?
                new ObjectParameter("Phone1", phone1) :
                new ObjectParameter("Phone1", typeof(string));
    
            var phone2Parameter = phone2 != null ?
                new ObjectParameter("Phone2", phone2) :
                new ObjectParameter("Phone2", typeof(string));
    
            var notesParameter = notes != null ?
                new ObjectParameter("notes", notes) :
                new ObjectParameter("notes", typeof(string));
    
            var barcodeParameter = barcode != null ?
                new ObjectParameter("barcode", barcode) :
                new ObjectParameter("barcode", typeof(string));
    
            var catidParameter = catid.HasValue ?
                new ObjectParameter("catid", catid) :
                new ObjectParameter("catid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddStudentBycode", satageidParameter, sectionidParameter, nameParameter, addressParameter, schoolParameter, phone1Parameter, phone2Parameter, notesParameter, barcodeParameter, catidParameter);
        }
    
        public virtual int addstudentcat(Nullable<int> stuid, Nullable<int> catid)
        {
            var stuidParameter = stuid.HasValue ?
                new ObjectParameter("Stuid", stuid) :
                new ObjectParameter("Stuid", typeof(int));
    
            var catidParameter = catid.HasValue ?
                new ObjectParameter("catid", catid) :
                new ObjectParameter("catid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addstudentcat", stuidParameter, catidParameter);
        }
    
        public virtual int ADDStudentLEave(Nullable<System.DateTime> date, Nullable<int> stuid)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var stuidParameter = stuid.HasValue ?
                new ObjectParameter("Stuid", stuid) :
                new ObjectParameter("Stuid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ADDStudentLEave", dateParameter, stuidParameter);
        }
    
        public virtual int ADDStudentPayes(Nullable<int> stuid, Nullable<int> catid, Nullable<System.DateTime> date, Nullable<decimal> totalvalue, Nullable<decimal> cost, Nullable<decimal> notesEXp, Nullable<decimal> netvalue, Nullable<int> payStuType, string paysType, Nullable<int> cashid)
        {
            var stuidParameter = stuid.HasValue ?
                new ObjectParameter("stuid", stuid) :
                new ObjectParameter("stuid", typeof(int));
    
            var catidParameter = catid.HasValue ?
                new ObjectParameter("catid", catid) :
                new ObjectParameter("catid", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var totalvalueParameter = totalvalue.HasValue ?
                new ObjectParameter("totalvalue", totalvalue) :
                new ObjectParameter("totalvalue", typeof(decimal));
    
            var costParameter = cost.HasValue ?
                new ObjectParameter("cost", cost) :
                new ObjectParameter("cost", typeof(decimal));
    
            var notesEXpParameter = notesEXp.HasValue ?
                new ObjectParameter("NotesEXp", notesEXp) :
                new ObjectParameter("NotesEXp", typeof(decimal));
    
            var netvalueParameter = netvalue.HasValue ?
                new ObjectParameter("Netvalue", netvalue) :
                new ObjectParameter("Netvalue", typeof(decimal));
    
            var payStuTypeParameter = payStuType.HasValue ?
                new ObjectParameter("PayStuType", payStuType) :
                new ObjectParameter("PayStuType", typeof(int));
    
            var paysTypeParameter = paysType != null ?
                new ObjectParameter("PaysType", paysType) :
                new ObjectParameter("PaysType", typeof(string));
    
            var cashidParameter = cashid.HasValue ?
                new ObjectParameter("cashid", cashid) :
                new ObjectParameter("cashid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ADDStudentPayes", stuidParameter, catidParameter, dateParameter, totalvalueParameter, costParameter, notesEXpParameter, netvalueParameter, payStuTypeParameter, paysTypeParameter, cashidParameter);
        }
    
        public virtual int AddStudentPaysNew(Nullable<int> catid, Nullable<int> stuid, Nullable<System.DateTime> date, string paystatus, Nullable<decimal> catcost, Nullable<decimal> discount, Nullable<decimal> notecost, Nullable<decimal> netvalue, Nullable<decimal> paid, Nullable<decimal> remaining, Nullable<int> cashid)
        {
            var catidParameter = catid.HasValue ?
                new ObjectParameter("catid", catid) :
                new ObjectParameter("catid", typeof(int));
    
            var stuidParameter = stuid.HasValue ?
                new ObjectParameter("stuid", stuid) :
                new ObjectParameter("stuid", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var paystatusParameter = paystatus != null ?
                new ObjectParameter("Paystatus", paystatus) :
                new ObjectParameter("Paystatus", typeof(string));
    
            var catcostParameter = catcost.HasValue ?
                new ObjectParameter("catcost", catcost) :
                new ObjectParameter("catcost", typeof(decimal));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("discount", discount) :
                new ObjectParameter("discount", typeof(decimal));
    
            var notecostParameter = notecost.HasValue ?
                new ObjectParameter("notecost", notecost) :
                new ObjectParameter("notecost", typeof(decimal));
    
            var netvalueParameter = netvalue.HasValue ?
                new ObjectParameter("Netvalue", netvalue) :
                new ObjectParameter("Netvalue", typeof(decimal));
    
            var paidParameter = paid.HasValue ?
                new ObjectParameter("paid", paid) :
                new ObjectParameter("paid", typeof(decimal));
    
            var remainingParameter = remaining.HasValue ?
                new ObjectParameter("Remaining", remaining) :
                new ObjectParameter("Remaining", typeof(decimal));
    
            var cashidParameter = cashid.HasValue ?
                new ObjectParameter("cashid", cashid) :
                new ObjectParameter("cashid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddStudentPaysNew", catidParameter, stuidParameter, dateParameter, paystatusParameter, catcostParameter, discountParameter, notecostParameter, netvalueParameter, paidParameter, remainingParameter, cashidParameter);
        }
    
        public virtual int ADDStudentReturn(Nullable<System.DateTime> date, Nullable<int> stuID, Nullable<int> cashID, Nullable<decimal> remaining, string satus)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var stuIDParameter = stuID.HasValue ?
                new ObjectParameter("stuID", stuID) :
                new ObjectParameter("stuID", typeof(int));
    
            var cashIDParameter = cashID.HasValue ?
                new ObjectParameter("cashID", cashID) :
                new ObjectParameter("cashID", typeof(int));
    
            var remainingParameter = remaining.HasValue ?
                new ObjectParameter("Remaining", remaining) :
                new ObjectParameter("Remaining", typeof(decimal));
    
            var satusParameter = satus != null ?
                new ObjectParameter("satus", satus) :
                new ObjectParameter("satus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ADDStudentReturn", dateParameter, stuIDParameter, cashIDParameter, remainingParameter, satusParameter);
        }
    
        public virtual int ADDUSER(string username, string pasword, Nullable<int> userIDD)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var paswordParameter = pasword != null ?
                new ObjectParameter("pasword", pasword) :
                new ObjectParameter("pasword", typeof(string));
    
            var userIDDParameter = userIDD.HasValue ?
                new ObjectParameter("UserIDD", userIDD) :
                new ObjectParameter("UserIDD", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ADDUSER", usernameParameter, paswordParameter, userIDDParameter);
        }
    
        public virtual ObjectResult<AllUsers_Result> AllUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AllUsers_Result>("AllUsers");
        }
    
        public virtual ObjectResult<AllUsersNeew_Result> AllUsersNeew()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AllUsersNeew_Result>("AllUsersNeew");
        }
    
        public virtual ObjectResult<Nullable<int>> checkattendance(Nullable<int> studid, Nullable<System.DateTime> date)
        {
            var studidParameter = studid.HasValue ?
                new ObjectParameter("studid", studid) :
                new ObjectParameter("studid", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("checkattendance", studidParameter, dateParameter);
        }
    
        public virtual int checkCash(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("checkCash", idParameter);
        }
    
        public virtual ObjectResult<checkcatogery_Result> checkcatogery(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<checkcatogery_Result>("checkcatogery", idParameter);
        }
    
        public virtual ObjectResult<checkExam_Result> checkExam(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<checkExam_Result>("checkExam", idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> checkIfEmpIsAttendance(Nullable<int> emp_id, Nullable<System.DateTime> date)
        {
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("checkIfEmpIsAttendance", emp_idParameter, dateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> checkIfEmpIsLeave(Nullable<int> emp_id, Nullable<System.DateTime> date)
        {
            var emp_idParameter = emp_id.HasValue ?
                new ObjectParameter("emp_id", emp_id) :
                new ObjectParameter("emp_id", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("checkIfEmpIsLeave", emp_idParameter, dateParameter);
        }
    
        public virtual ObjectResult<CheckIfExamExist_Result> CheckIfExamExist(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckIfExamExist_Result>("CheckIfExamExist", nameParameter);
        }
    
        public virtual ObjectResult<CheckIfSectionExist_Result> CheckIfSectionExist(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckIfSectionExist_Result>("CheckIfSectionExist", nameParameter);
        }
    
        public virtual ObjectResult<CheckIfStageExist_Result> CheckIfStageExist(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckIfStageExist_Result>("CheckIfStageExist", nameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> checkIfStudentIsAttendance(Nullable<int> stu_ID, Nullable<System.DateTime> date, Nullable<int> catid)
        {
            var stu_IDParameter = stu_ID.HasValue ?
                new ObjectParameter("Stu_ID", stu_ID) :
                new ObjectParameter("Stu_ID", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var catidParameter = catid.HasValue ?
                new ObjectParameter("Catid", catid) :
                new ObjectParameter("Catid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("checkIfStudentIsAttendance", stu_IDParameter, dateParameter, catidParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> checkIfStudentIsAttendanceBybarcode(string barcode, Nullable<System.DateTime> date)
        {
            var barcodeParameter = barcode != null ?
                new ObjectParameter("barcode", barcode) :
                new ObjectParameter("barcode", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("checkIfStudentIsAttendanceBybarcode", barcodeParameter, dateParameter);
        }
    
        public virtual ObjectResult<CheckIfSubjectExist_Result> CheckIfSubjectExist(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckIfSubjectExist_Result>("CheckIfSubjectExist", nameParameter);
        }
    
        public virtual ObjectResult<checkJop_Result> checkJop(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<checkJop_Result>("checkJop", idParameter);
        }
    
        public virtual ObjectResult<checkSection_Result> checkSection(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<checkSection_Result>("checkSection", idParameter);
        }
    
        public virtual ObjectResult<checkstage_Result> checkstage(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<checkstage_Result>("checkstage", idParameter);
        }
    
        public virtual ObjectResult<checkStudent_Result> checkStudent(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<checkStudent_Result>("checkStudent", idParameter);
        }
    
        public virtual ObjectResult<checkSubject_Result> checkSubject(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<checkSubject_Result>("checkSubject", idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> countstudent()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("countstudent");
        }
    
        public virtual int Deletecatogery(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Deletecatogery", idParameter);
        }
    
        public virtual int deleteemp(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteemp", idParameter);
        }
    
        public virtual int DeleteEmpolyee(Nullable<int> id, Nullable<int> user_id2)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var user_id2Parameter = user_id2.HasValue ?
                new ObjectParameter("user_id2", user_id2) :
                new ObjectParameter("user_id2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteEmpolyee", idParameter, user_id2Parameter);
        }
    
        public virtual int DeleteeStages(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteeStages", idParameter);
        }
    
        public virtual int DeleteExam(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteExam", idParameter);
        }
    
        public virtual int deleteExamResults(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteExamResults", idParameter);
        }
    
        public virtual int DeleteForUpdate(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteForUpdate", idParameter);
        }
    
        public virtual int DeleteForUpdateNew(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteForUpdateNew", idParameter);
        }
    
        public virtual int DeleteJob(Nullable<int> id, Nullable<int> userID)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteJob", idParameter, userIDParameter);
        }
    
        public virtual int DeletePerUser(Nullable<int> user_id, Nullable<int> page_id)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var page_idParameter = page_id.HasValue ?
                new ObjectParameter("page_id", page_id) :
                new ObjectParameter("page_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePerUser", user_idParameter, page_idParameter);
        }
    
        public virtual int DeleteSection(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteSection", idParameter);
        }
    
        public virtual int DeleteStudent(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteStudent", idParameter);
        }
    
        public virtual int DeleteSubject(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteSubject", idParameter);
        }
    
        public virtual int DeleteUser(Nullable<int> id, Nullable<int> userID)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUser", idParameter, userIDParameter);
        }
    
        public virtual ObjectResult<DisplayEmpolyees_Result> DisplayEmpolyees()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DisplayEmpolyees_Result>("DisplayEmpolyees");
        }
    
        public virtual ObjectResult<DisplayJobs_Result> DisplayJobs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DisplayJobs_Result>("DisplayJobs");
        }
    
        public virtual ObjectResult<ExamResult_Result> ExamResult()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExamResult_Result>("ExamResult");
        }
    
        public virtual ObjectResult<GetAllOperation_Result> GetAllOperation()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllOperation_Result>("GetAllOperation");
        }
    
        public virtual int GETcahFromCurrentvalue(Nullable<int> cashid, Nullable<int> warehouseID)
        {
            var cashidParameter = cashid.HasValue ?
                new ObjectParameter("cashid", cashid) :
                new ObjectParameter("cashid", typeof(int));
    
            var warehouseIDParameter = warehouseID.HasValue ?
                new ObjectParameter("warehouseID", warehouseID) :
                new ObjectParameter("warehouseID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GETcahFromCurrentvalue", cashidParameter, warehouseIDParameter);
        }
    
        public virtual ObjectResult<GetCatbystudentid_Result> GetCatbystudentid(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCatbystudentid_Result>("GetCatbystudentid", idParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> GetCatcost(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("GetCatcost", idParameter);
        }
    
        public virtual ObjectResult<getCatogaryDetailsByID_Result> getCatogaryDetailsByID(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCatogaryDetailsByID_Result>("getCatogaryDetailsByID", idParameter);
        }
    
        public virtual ObjectResult<GetCatogeryDataForCombobox_Result> GetCatogeryDataForCombobox()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCatogeryDataForCombobox_Result>("GetCatogeryDataForCombobox");
        }
    
        public virtual ObjectResult<GetCatogeryDataForComboboxbybarcode_Result> GetCatogeryDataForComboboxbybarcode(string barcode)
        {
            var barcodeParameter = barcode != null ?
                new ObjectParameter("barcode", barcode) :
                new ObjectParameter("barcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCatogeryDataForComboboxbybarcode_Result>("GetCatogeryDataForComboboxbybarcode", barcodeParameter);
        }
    
        public virtual ObjectResult<GetCatogeryDataForComboboxs_Result> GetCatogeryDataForComboboxs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCatogeryDataForComboboxs_Result>("GetCatogeryDataForComboboxs");
        }
    
        public virtual ObjectResult<GetEmployeeyDataForCombobox_Result> GetEmployeeyDataForCombobox()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployeeyDataForCombobox_Result>("GetEmployeeyDataForCombobox");
        }
    
        public virtual ObjectResult<GetExamDataForCombobox_Result> GetExamDataForCombobox()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetExamDataForCombobox_Result>("GetExamDataForCombobox");
        }
    
        public virtual ObjectResult<GetPageID_Result> GetPageID(string str)
        {
            var strParameter = str != null ?
                new ObjectParameter("str", str) :
                new ObjectParameter("str", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPageID_Result>("GetPageID", strParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetPaySatus(string barcode)
        {
            var barcodeParameter = barcode != null ?
                new ObjectParameter("barcode", barcode) :
                new ObjectParameter("barcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetPaySatus", barcodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetPaySatusbyid(Nullable<int> stuid)
        {
            var stuidParameter = stuid.HasValue ?
                new ObjectParameter("stuid", stuid) :
                new ObjectParameter("stuid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetPaySatusbyid", stuidParameter);
        }
    
        public virtual ObjectResult<getsectionbybarcode_Result> getsectionbybarcode(string barcode)
        {
            var barcodeParameter = barcode != null ?
                new ObjectParameter("barcode", barcode) :
                new ObjectParameter("barcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getsectionbybarcode_Result>("getsectionbybarcode", barcodeParameter);
        }
    
        public virtual ObjectResult<GetSectionDataBystageid_Result> GetSectionDataBystageid(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSectionDataBystageid_Result>("GetSectionDataBystageid", idParameter);
        }
    
        public virtual ObjectResult<GetSectionDataForCombobox_Result> GetSectionDataForCombobox()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSectionDataForCombobox_Result>("GetSectionDataForCombobox");
        }
    
        public virtual ObjectResult<GetSectionidDataForCombobox_Result> GetSectionidDataForCombobox(Nullable<int> secid)
        {
            var secidParameter = secid.HasValue ?
                new ObjectParameter("secid", secid) :
                new ObjectParameter("secid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSectionidDataForCombobox_Result>("GetSectionidDataForCombobox", secidParameter);
        }
    
        public virtual ObjectResult<GetSpisficCatogeryDataForCombobox_Result> GetSpisficCatogeryDataForCombobox(Nullable<int> stageid, Nullable<int> secid)
        {
            var stageidParameter = stageid.HasValue ?
                new ObjectParameter("stageid", stageid) :
                new ObjectParameter("stageid", typeof(int));
    
            var secidParameter = secid.HasValue ?
                new ObjectParameter("secid", secid) :
                new ObjectParameter("secid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSpisficCatogeryDataForCombobox_Result>("GetSpisficCatogeryDataForCombobox", stageidParameter, secidParameter);
        }
    
        public virtual ObjectResult<getstagebybarcode_Result> getstagebybarcode(string barcode)
        {
            var barcodeParameter = barcode != null ?
                new ObjectParameter("barcode", barcode) :
                new ObjectParameter("barcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getstagebybarcode_Result>("getstagebybarcode", barcodeParameter);
        }
    
        public virtual ObjectResult<GetStagesDataForCombobox_Result> GetStagesDataForCombobox()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStagesDataForCombobox_Result>("GetStagesDataForCombobox");
        }
    
        public virtual ObjectResult<GetStagesidDataForCombobox_Result> GetStagesidDataForCombobox(Nullable<int> stageid)
        {
            var stageidParameter = stageid.HasValue ?
                new ObjectParameter("stageid", stageid) :
                new ObjectParameter("stageid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStagesidDataForCombobox_Result>("GetStagesidDataForCombobox", stageidParameter);
        }
    
        public virtual ObjectResult<getstudentbybarcode_Result> getstudentbybarcode(string barcode)
        {
            var barcodeParameter = barcode != null ?
                new ObjectParameter("barcode", barcode) :
                new ObjectParameter("barcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getstudentbybarcode_Result>("getstudentbybarcode", barcodeParameter);
        }
    
        public virtual ObjectResult<getstudentbyCatid_Result> getstudentbyCatid(Nullable<int> stageid, Nullable<int> secid, Nullable<int> catid)
        {
            var stageidParameter = stageid.HasValue ?
                new ObjectParameter("stageid", stageid) :
                new ObjectParameter("stageid", typeof(int));
    
            var secidParameter = secid.HasValue ?
                new ObjectParameter("secid", secid) :
                new ObjectParameter("secid", typeof(int));
    
            var catidParameter = catid.HasValue ?
                new ObjectParameter("catid", catid) :
                new ObjectParameter("catid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getstudentbyCatid_Result>("getstudentbyCatid", stageidParameter, secidParameter, catidParameter);
        }
    
        public virtual ObjectResult<getstudentbyid_Result> getstudentbyid(Nullable<int> stuid)
        {
            var stuidParameter = stuid.HasValue ?
                new ObjectParameter("stuid", stuid) :
                new ObjectParameter("stuid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getstudentbyid_Result>("getstudentbyid", stuidParameter);
        }
    
        public virtual ObjectResult<GetstudentDataBycat_Result> GetstudentDataBycat(Nullable<int> catid)
        {
            var catidParameter = catid.HasValue ?
                new ObjectParameter("catid", catid) :
                new ObjectParameter("catid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetstudentDataBycat_Result>("GetstudentDataBycat", catidParameter);
        }
    
        public virtual ObjectResult<GetStudentFile_Result> GetStudentFile(Nullable<System.DateTime> datefrom, Nullable<System.DateTime> dateto, Nullable<int> studid)
        {
            var datefromParameter = datefrom.HasValue ?
                new ObjectParameter("datefrom", datefrom) :
                new ObjectParameter("datefrom", typeof(System.DateTime));
    
            var datetoParameter = dateto.HasValue ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(System.DateTime));
    
            var studidParameter = studid.HasValue ?
                new ObjectParameter("Studid", studid) :
                new ObjectParameter("Studid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentFile_Result>("GetStudentFile", datefromParameter, datetoParameter, studidParameter);
        }
    
        public virtual ObjectResult<getstudentforcombobox_Result> getstudentforcombobox(Nullable<int> stageid, Nullable<int> secid)
        {
            var stageidParameter = stageid.HasValue ?
                new ObjectParameter("stageid", stageid) :
                new ObjectParameter("stageid", typeof(int));
    
            var secidParameter = secid.HasValue ?
                new ObjectParameter("secid", secid) :
                new ObjectParameter("secid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getstudentforcombobox_Result>("getstudentforcombobox", stageidParameter, secidParameter);
        }
    
        public virtual ObjectResult<GetSubjectforcombox_Result> GetSubjectforcombox()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSubjectforcombox_Result>("GetSubjectforcombox");
        }
    
        public virtual ObjectResult<GetTeacherforcombox_Result> GetTeacherforcombox()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTeacherforcombox_Result>("GetTeacherforcombox");
        }
    
        public virtual ObjectResult<GetUsers_Result> GetUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUsers_Result>("GetUsers");
        }
    
        public virtual ObjectResult<IB_GetCashDataForCombobox_Result> IB_GetCashDataForCombobox()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IB_GetCashDataForCombobox_Result>("IB_GetCashDataForCombobox");
        }
    
        public virtual int insert_PayCatExpnces(Nullable<int> stuid, Nullable<int> catid, Nullable<decimal> discount, Nullable<decimal> value, Nullable<decimal> netvalue, string nots, Nullable<int> cashid, Nullable<System.DateTime> dOP)
        {
            var stuidParameter = stuid.HasValue ?
                new ObjectParameter("stuid", stuid) :
                new ObjectParameter("stuid", typeof(int));
    
            var catidParameter = catid.HasValue ?
                new ObjectParameter("catid", catid) :
                new ObjectParameter("catid", typeof(int));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("discount", discount) :
                new ObjectParameter("discount", typeof(decimal));
    
            var valueParameter = value.HasValue ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(decimal));
    
            var netvalueParameter = netvalue.HasValue ?
                new ObjectParameter("Netvalue", netvalue) :
                new ObjectParameter("Netvalue", typeof(decimal));
    
            var notsParameter = nots != null ?
                new ObjectParameter("nots", nots) :
                new ObjectParameter("nots", typeof(string));
    
            var cashidParameter = cashid.HasValue ?
                new ObjectParameter("cashid", cashid) :
                new ObjectParameter("cashid", typeof(int));
    
            var dOPParameter = dOP.HasValue ?
                new ObjectParameter("DOP", dOP) :
                new ObjectParameter("DOP", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_PayCatExpnces", stuidParameter, catidParameter, discountParameter, valueParameter, netvalueParameter, notsParameter, cashidParameter, dOPParameter);
        }
    
        public virtual int insertEmplLeave(Nullable<System.DateTime> date, Nullable<int> empid)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var empidParameter = empid.HasValue ?
                new ObjectParameter("Empid", empid) :
                new ObjectParameter("Empid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertEmplLeave", dateParameter, empidParameter);
        }
    
        public virtual int insertStudentAttendance(Nullable<System.DateTime> date, Nullable<int> studid)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var studidParameter = studid.HasValue ?
                new ObjectParameter("studid", studid) :
                new ObjectParameter("studid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertStudentAttendance", dateParameter, studidParameter);
        }
    
        public virtual int insertStudentLeaves(Nullable<System.DateTime> date, Nullable<int> studid)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var studidParameter = studid.HasValue ?
                new ObjectParameter("studid", studid) :
                new ObjectParameter("studid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertStudentLeaves", dateParameter, studidParameter);
        }
    
        public virtual int insertSubject(string name, string nots)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var notsParameter = nots != null ?
                new ObjectParameter("nots", nots) :
                new ObjectParameter("nots", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertSubject", nameParameter, notsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> LastInsertUser()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("LastInsertUser");
        }
    
        public virtual ObjectResult<Nullable<int>> MAproc_CheckIfExpenseTypeExist(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("MAproc_CheckIfExpenseTypeExist", nameParameter);
        }
    
        public virtual int MAproc_DeleteExpense(Nullable<int> expenseID, Nullable<int> userID)
        {
            var expenseIDParameter = expenseID.HasValue ?
                new ObjectParameter("ExpenseID", expenseID) :
                new ObjectParameter("ExpenseID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MAproc_DeleteExpense", expenseIDParameter, userIDParameter);
        }
    
        public virtual int MAproc_DeleteExpenseType(Nullable<int> iD, Nullable<int> userID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MAproc_DeleteExpenseType", iDParameter, userIDParameter);
        }
    
        public virtual int MAproc_InsertExpense(Nullable<int> expenseTypeID, Nullable<System.DateTime> date, string name, Nullable<decimal> value, string details, Nullable<int> cashID, Nullable<int> bankID, string checkNum, Nullable<int> warehouseID, Nullable<int> userID)
        {
            var expenseTypeIDParameter = expenseTypeID.HasValue ?
                new ObjectParameter("ExpenseTypeID", expenseTypeID) :
                new ObjectParameter("ExpenseTypeID", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var valueParameter = value.HasValue ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(decimal));
    
            var detailsParameter = details != null ?
                new ObjectParameter("Details", details) :
                new ObjectParameter("Details", typeof(string));
    
            var cashIDParameter = cashID.HasValue ?
                new ObjectParameter("CashID", cashID) :
                new ObjectParameter("CashID", typeof(int));
    
            var bankIDParameter = bankID.HasValue ?
                new ObjectParameter("BankID", bankID) :
                new ObjectParameter("BankID", typeof(int));
    
            var checkNumParameter = checkNum != null ?
                new ObjectParameter("CheckNum", checkNum) :
                new ObjectParameter("CheckNum", typeof(string));
    
            var warehouseIDParameter = warehouseID.HasValue ?
                new ObjectParameter("WarehouseID", warehouseID) :
                new ObjectParameter("WarehouseID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MAproc_InsertExpense", expenseTypeIDParameter, dateParameter, nameParameter, valueParameter, detailsParameter, cashIDParameter, bankIDParameter, checkNumParameter, warehouseIDParameter, userIDParameter);
        }
    
        public virtual int MAproc_InsertExpenseType(string name, Nullable<int> userID)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MAproc_InsertExpenseType", nameParameter, userIDParameter);
        }
    
        public virtual int MAproc_InsertOperationLog(string descriptionLog, Nullable<int> transactionTypeID, Nullable<int> userID)
        {
            var descriptionLogParameter = descriptionLog != null ?
                new ObjectParameter("DescriptionLog", descriptionLog) :
                new ObjectParameter("DescriptionLog", typeof(string));
    
            var transactionTypeIDParameter = transactionTypeID.HasValue ?
                new ObjectParameter("TransactionTypeID", transactionTypeID) :
                new ObjectParameter("TransactionTypeID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MAproc_InsertOperationLog", descriptionLogParameter, transactionTypeIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<MAproc_SelectAllExpenseType_Result> MAproc_SelectAllExpenseType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MAproc_SelectAllExpenseType_Result>("MAproc_SelectAllExpenseType");
        }
    
        public virtual ObjectResult<MAproc_SelectExpenseType_Result> MAproc_SelectExpenseType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MAproc_SelectExpenseType_Result>("MAproc_SelectExpenseType");
        }
    
        public virtual ObjectResult<MAproc_SelectExpenseTypeByID_Result> MAproc_SelectExpenseTypeByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MAproc_SelectExpenseTypeByID_Result>("MAproc_SelectExpenseTypeByID", iDParameter);
        }
    
        public virtual ObjectResult<MAproc_SelectExpenseTypeByName_Result> MAproc_SelectExpenseTypeByName(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MAproc_SelectExpenseTypeByName_Result>("MAproc_SelectExpenseTypeByName", nameParameter);
        }
    
        public virtual ObjectResult<MAproc_SeleteAllExpenses_Result> MAproc_SeleteAllExpenses()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MAproc_SeleteAllExpenses_Result>("MAproc_SeleteAllExpenses");
        }
    
        public virtual ObjectResult<MAproc_SeleteExpenseByID_Result> MAproc_SeleteExpenseByID(Nullable<int> expenseID)
        {
            var expenseIDParameter = expenseID.HasValue ?
                new ObjectParameter("ExpenseID", expenseID) :
                new ObjectParameter("ExpenseID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MAproc_SeleteExpenseByID_Result>("MAproc_SeleteExpenseByID", expenseIDParameter);
        }
    
        public virtual int MAproc_UpdateExpense(Nullable<int> expenseID, Nullable<int> expenseTypeID, Nullable<System.DateTime> date, string name, Nullable<decimal> value, string details, Nullable<int> cashID, Nullable<int> bankID, string checkNum, Nullable<int> warehouseID, Nullable<int> userID)
        {
            var expenseIDParameter = expenseID.HasValue ?
                new ObjectParameter("ExpenseID", expenseID) :
                new ObjectParameter("ExpenseID", typeof(int));
    
            var expenseTypeIDParameter = expenseTypeID.HasValue ?
                new ObjectParameter("ExpenseTypeID", expenseTypeID) :
                new ObjectParameter("ExpenseTypeID", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var valueParameter = value.HasValue ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(decimal));
    
            var detailsParameter = details != null ?
                new ObjectParameter("Details", details) :
                new ObjectParameter("Details", typeof(string));
    
            var cashIDParameter = cashID.HasValue ?
                new ObjectParameter("CashID", cashID) :
                new ObjectParameter("CashID", typeof(int));
    
            var bankIDParameter = bankID.HasValue ?
                new ObjectParameter("BankID", bankID) :
                new ObjectParameter("BankID", typeof(int));
    
            var checkNumParameter = checkNum != null ?
                new ObjectParameter("CheckNum", checkNum) :
                new ObjectParameter("CheckNum", typeof(string));
    
            var warehouseIDParameter = warehouseID.HasValue ?
                new ObjectParameter("WarehouseID", warehouseID) :
                new ObjectParameter("WarehouseID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MAproc_UpdateExpense", expenseIDParameter, expenseTypeIDParameter, dateParameter, nameParameter, valueParameter, detailsParameter, cashIDParameter, bankIDParameter, checkNumParameter, warehouseIDParameter, userIDParameter);
        }
    
        public virtual int MAproc_UpdateExpenseType(Nullable<int> iD, string name, Nullable<int> userID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MAproc_UpdateExpenseType", iDParameter, nameParameter, userIDParameter);
        }
    
        public virtual ObjectResult<PrintbarcodeForCatogery_Result> PrintbarcodeForCatogery(Nullable<int> catid)
        {
            var catidParameter = catid.HasValue ?
                new ObjectParameter("catid", catid) :
                new ObjectParameter("catid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrintbarcodeForCatogery_Result>("PrintbarcodeForCatogery", catidParameter);
        }
    
        public virtual ObjectResult<PrintStudentForCatogery_Result> PrintStudentForCatogery(Nullable<int> catid)
        {
            var catidParameter = catid.HasValue ?
                new ObjectParameter("catid", catid) :
                new ObjectParameter("catid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrintStudentForCatogery_Result>("PrintStudentForCatogery", catidParameter);
        }
    
        public virtual ObjectResult<Report_Attendance_Result> Report_Attendance(Nullable<System.DateTime> datefrom, Nullable<System.DateTime> dateto)
        {
            var datefromParameter = datefrom.HasValue ?
                new ObjectParameter("datefrom", datefrom) :
                new ObjectParameter("datefrom", typeof(System.DateTime));
    
            var datetoParameter = dateto.HasValue ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Report_Attendance_Result>("Report_Attendance", datefromParameter, datetoParameter);
        }
    
        public virtual ObjectResult<Report_AttendanceByCatogery_Result> Report_AttendanceByCatogery(Nullable<System.DateTime> datefrom, Nullable<System.DateTime> dateto, Nullable<int> catid)
        {
            var datefromParameter = datefrom.HasValue ?
                new ObjectParameter("datefrom", datefrom) :
                new ObjectParameter("datefrom", typeof(System.DateTime));
    
            var datetoParameter = dateto.HasValue ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(System.DateTime));
    
            var catidParameter = catid.HasValue ?
                new ObjectParameter("catid", catid) :
                new ObjectParameter("catid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Report_AttendanceByCatogery_Result>("Report_AttendanceByCatogery", datefromParameter, datetoParameter, catidParameter);
        }
    
        public virtual ObjectResult<Report_AttendanceByStudent_Result> Report_AttendanceByStudent(Nullable<System.DateTime> datefrom, Nullable<System.DateTime> dateto, Nullable<int> catid, Nullable<int> stuid)
        {
            var datefromParameter = datefrom.HasValue ?
                new ObjectParameter("datefrom", datefrom) :
                new ObjectParameter("datefrom", typeof(System.DateTime));
    
            var datetoParameter = dateto.HasValue ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(System.DateTime));
    
            var catidParameter = catid.HasValue ?
                new ObjectParameter("catid", catid) :
                new ObjectParameter("catid", typeof(int));
    
            var stuidParameter = stuid.HasValue ?
                new ObjectParameter("stuid", stuid) :
                new ObjectParameter("stuid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Report_AttendanceByStudent_Result>("Report_AttendanceByStudent", datefromParameter, datetoParameter, catidParameter, stuidParameter);
        }
    
        public virtual ObjectResult<ReportExpense_Result> ReportExpense(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportExpense_Result>("ReportExpense", fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<ReportPayeed_Result> ReportPayeed(Nullable<System.DateTime> datefrom, Nullable<System.DateTime> dateto)
        {
            var datefromParameter = datefrom.HasValue ?
                new ObjectParameter("datefrom", datefrom) :
                new ObjectParameter("datefrom", typeof(System.DateTime));
    
            var datetoParameter = dateto.HasValue ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportPayeed_Result>("ReportPayeed", datefromParameter, datetoParameter);
        }
    
        public virtual ObjectResult<ReportStuFile_Result> ReportStuFile(Nullable<System.DateTime> datefrom, Nullable<System.DateTime> dateto, Nullable<int> stuid)
        {
            var datefromParameter = datefrom.HasValue ?
                new ObjectParameter("datefrom", datefrom) :
                new ObjectParameter("datefrom", typeof(System.DateTime));
    
            var datetoParameter = dateto.HasValue ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(System.DateTime));
    
            var stuidParameter = stuid.HasValue ?
                new ObjectParameter("stuid", stuid) :
                new ObjectParameter("stuid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportStuFile_Result>("ReportStuFile", datefromParameter, datetoParameter, stuidParameter);
        }
    
        public virtual ObjectResult<RPT_ReportStuFile_Result> RPT_ReportStuFile(Nullable<System.DateTime> datefrom, Nullable<System.DateTime> dateto, Nullable<int> stuid)
        {
            var datefromParameter = datefrom.HasValue ?
                new ObjectParameter("datefrom", datefrom) :
                new ObjectParameter("datefrom", typeof(System.DateTime));
    
            var datetoParameter = dateto.HasValue ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(System.DateTime));
    
            var stuidParameter = stuid.HasValue ?
                new ObjectParameter("stuid", stuid) :
                new ObjectParameter("stuid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RPT_ReportStuFile_Result>("RPT_ReportStuFile", datefromParameter, datetoParameter, stuidParameter);
        }
    
        public virtual int Sa_AddCashData(string cashName, Nullable<decimal> openingvalue, Nullable<int> userID)
        {
            var cashNameParameter = cashName != null ?
                new ObjectParameter("cashName", cashName) :
                new ObjectParameter("cashName", typeof(string));
    
            var openingvalueParameter = openingvalue.HasValue ?
                new ObjectParameter("openingvalue", openingvalue) :
                new ObjectParameter("openingvalue", typeof(decimal));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sa_AddCashData", cashNameParameter, openingvalueParameter, userIDParameter);
        }
    
        public virtual int Sa_AddJob(string job_name, Nullable<int> userID)
        {
            var job_nameParameter = job_name != null ?
                new ObjectParameter("Job_name", job_name) :
                new ObjectParameter("Job_name", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sa_AddJob", job_nameParameter, userIDParameter);
        }
    
        public virtual ObjectResult<Sa_CheckIfCashNameExist_Result> Sa_CheckIfCashNameExist(string cashName)
        {
            var cashNameParameter = cashName != null ?
                new ObjectParameter("cashName", cashName) :
                new ObjectParameter("cashName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sa_CheckIfCashNameExist_Result>("Sa_CheckIfCashNameExist", cashNameParameter);
        }
    
        public virtual ObjectResult<Sa_CheckIfJobNameExist_Result> Sa_CheckIfJobNameExist(string jobName)
        {
            var jobNameParameter = jobName != null ?
                new ObjectParameter("jobName", jobName) :
                new ObjectParameter("jobName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sa_CheckIfJobNameExist_Result>("Sa_CheckIfJobNameExist", jobNameParameter);
        }
    
        public virtual ObjectResult<Sa_CheckIfStageExist_Result> Sa_CheckIfStageExist(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sa_CheckIfStageExist_Result>("Sa_CheckIfStageExist", nameParameter);
        }
    
        public virtual ObjectResult<Sa_CheckIfUpdateCashNameExist_Result> Sa_CheckIfUpdateCashNameExist(string cashName, Nullable<int> id)
        {
            var cashNameParameter = cashName != null ?
                new ObjectParameter("cashName", cashName) :
                new ObjectParameter("cashName", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sa_CheckIfUpdateCashNameExist_Result>("Sa_CheckIfUpdateCashNameExist", cashNameParameter, idParameter);
        }
    
        public virtual ObjectResult<Sa_CheckIfUpdateJobExist_Result> Sa_CheckIfUpdateJobExist(string jobName, Nullable<int> id)
        {
            var jobNameParameter = jobName != null ?
                new ObjectParameter("jobName", jobName) :
                new ObjectParameter("jobName", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sa_CheckIfUpdateJobExist_Result>("Sa_CheckIfUpdateJobExist", jobNameParameter, idParameter);
        }
    
        public virtual ObjectResult<Sa_CheckIfUpdateUserExist_Result> Sa_CheckIfUpdateUserExist(string userName, Nullable<int> id)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sa_CheckIfUpdateUserExist_Result>("Sa_CheckIfUpdateUserExist", userNameParameter, idParameter);
        }
    
        public virtual int Sa_DeleteCashData(Nullable<int> id, Nullable<int> userID)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sa_DeleteCashData", idParameter, userIDParameter);
        }
    
        public virtual int Sa_DeleteJob(Nullable<int> id, Nullable<int> userID)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sa_DeleteJob", idParameter, userIDParameter);
        }
    
        public virtual int Sa_EditJobName(string jobName, Nullable<int> id, Nullable<int> userID)
        {
            var jobNameParameter = jobName != null ?
                new ObjectParameter("jobName", jobName) :
                new ObjectParameter("jobName", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sa_EditJobName", jobNameParameter, idParameter, userIDParameter);
        }
    
        public virtual ObjectResult<Sa_GetCashData_Result> Sa_GetCashData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sa_GetCashData_Result>("Sa_GetCashData");
        }
    
        public virtual ObjectResult<Sa_GetJobs_Result> Sa_GetJobs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sa_GetJobs_Result>("Sa_GetJobs");
        }
    
        public virtual ObjectResult<sa_Login_Proc_Result> sa_Login_Proc(string userName, string pass)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sa_Login_Proc_Result>("sa_Login_Proc", userNameParameter, passParameter);
        }
    
        public virtual ObjectResult<Sa_SearchCash_Result> Sa_SearchCash(string word)
        {
            var wordParameter = word != null ?
                new ObjectParameter("word", word) :
                new ObjectParameter("word", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sa_SearchCash_Result>("Sa_SearchCash", wordParameter);
        }
    
        public virtual ObjectResult<Sa_SearchJob_Result> Sa_SearchJob(string word)
        {
            var wordParameter = word != null ?
                new ObjectParameter("word", word) :
                new ObjectParameter("word", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sa_SearchJob_Result>("Sa_SearchJob", wordParameter);
        }
    
        public virtual ObjectResult<Sa_SearchUser_Result> Sa_SearchUser(string word)
        {
            var wordParameter = word != null ?
                new ObjectParameter("word", word) :
                new ObjectParameter("word", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sa_SearchUser_Result>("Sa_SearchUser", wordParameter);
        }
    
        public virtual ObjectResult<Sa_ShowAllUsers_Result> Sa_ShowAllUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sa_ShowAllUsers_Result>("Sa_ShowAllUsers");
        }
    
        public virtual int Sa_UpdateCashData(Nullable<int> id, string cashName, Nullable<decimal> openingvalue, Nullable<int> userID)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var cashNameParameter = cashName != null ?
                new ObjectParameter("cashName", cashName) :
                new ObjectParameter("cashName", typeof(string));
    
            var openingvalueParameter = openingvalue.HasValue ?
                new ObjectParameter("openingvalue", openingvalue) :
                new ObjectParameter("openingvalue", typeof(decimal));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sa_UpdateCashData", idParameter, cashNameParameter, openingvalueParameter, userIDParameter);
        }
    
        public virtual ObjectResult<SearchExam_Result> SearchExam(string word)
        {
            var wordParameter = word != null ?
                new ObjectParameter("word", word) :
                new ObjectParameter("word", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchExam_Result>("SearchExam", wordParameter);
        }
    
        public virtual ObjectResult<searchResult_Result> searchResult(string word)
        {
            var wordParameter = word != null ?
                new ObjectParameter("word", word) :
                new ObjectParameter("word", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<searchResult_Result>("searchResult", wordParameter);
        }
    
        public virtual ObjectResult<Searchstage_Result> Searchstage(string word)
        {
            var wordParameter = word != null ?
                new ObjectParameter("word", word) :
                new ObjectParameter("word", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Searchstage_Result>("Searchstage", wordParameter);
        }
    
        public virtual ObjectResult<searchStudent_Result> searchStudent(string word)
        {
            var wordParameter = word != null ?
                new ObjectParameter("word", word) :
                new ObjectParameter("word", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<searchStudent_Result>("searchStudent", wordParameter);
        }
    
        public virtual ObjectResult<SearchSubject_Result> SearchSubject(string word)
        {
            var wordParameter = word != null ?
                new ObjectParameter("word", word) :
                new ObjectParameter("word", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchSubject_Result>("SearchSubject", wordParameter);
        }
    
        public virtual ObjectResult<select_Employee_Result> select_Employee()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<select_Employee_Result>("select_Employee");
        }
    
        public virtual ObjectResult<selectAttendance_Result> selectAttendance(Nullable<System.DateTime> datefrom, Nullable<System.DateTime> dateto)
        {
            var datefromParameter = datefrom.HasValue ?
                new ObjectParameter("datefrom", datefrom) :
                new ObjectParameter("datefrom", typeof(System.DateTime));
    
            var datetoParameter = dateto.HasValue ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectAttendance_Result>("selectAttendance", datefromParameter, datetoParameter);
        }
    
        public virtual ObjectResult<selectAttendEmp_Result> selectAttendEmp(Nullable<System.DateTime> datefrom, Nullable<System.DateTime> dateto, Nullable<int> empid)
        {
            var datefromParameter = datefrom.HasValue ?
                new ObjectParameter("datefrom", datefrom) :
                new ObjectParameter("datefrom", typeof(System.DateTime));
    
            var datetoParameter = dateto.HasValue ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(System.DateTime));
    
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectAttendEmp_Result>("selectAttendEmp", datefromParameter, datetoParameter, empidParameter);
        }
    
        public virtual ObjectResult<selectcatByStuid_Result> selectcatByStuid(Nullable<int> stuid)
        {
            var stuidParameter = stuid.HasValue ?
                new ObjectParameter("stuid", stuid) :
                new ObjectParameter("stuid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectcatByStuid_Result>("selectcatByStuid", stuidParameter);
        }
    
        public virtual ObjectResult<selectcatfprcombox_Result> selectcatfprcombox(Nullable<int> stageid, Nullable<int> secid)
        {
            var stageidParameter = stageid.HasValue ?
                new ObjectParameter("stageid", stageid) :
                new ObjectParameter("stageid", typeof(int));
    
            var secidParameter = secid.HasValue ?
                new ObjectParameter("secid", secid) :
                new ObjectParameter("secid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectcatfprcombox_Result>("selectcatfprcombox", stageidParameter, secidParameter);
        }
    
        public virtual ObjectResult<SelectDateOfCat_Result> SelectDateOfCat(Nullable<System.DateTime> datefrom, Nullable<System.DateTime> dateto, Nullable<int> catid)
        {
            var datefromParameter = datefrom.HasValue ?
                new ObjectParameter("datefrom", datefrom) :
                new ObjectParameter("datefrom", typeof(System.DateTime));
    
            var datetoParameter = dateto.HasValue ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(System.DateTime));
    
            var catidParameter = catid.HasValue ?
                new ObjectParameter("catid", catid) :
                new ObjectParameter("catid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectDateOfCat_Result>("SelectDateOfCat", datefromParameter, datetoParameter, catidParameter);
        }
    
        public virtual ObjectResult<selectEmpForCombox_Result> selectEmpForCombox()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectEmpForCombox_Result>("selectEmpForCombox");
        }
    
        public virtual ObjectResult<selectLeaveEmp_Result> selectLeaveEmp(Nullable<System.DateTime> datefrom, Nullable<System.DateTime> dateto, Nullable<int> empid)
        {
            var datefromParameter = datefrom.HasValue ?
                new ObjectParameter("datefrom", datefrom) :
                new ObjectParameter("datefrom", typeof(System.DateTime));
    
            var datetoParameter = dateto.HasValue ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(System.DateTime));
    
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectLeaveEmp_Result>("selectLeaveEmp", datefromParameter, datetoParameter, empidParameter);
        }
    
        public virtual ObjectResult<selectNotPaydBycat_Result> selectNotPaydBycat(Nullable<System.DateTime> datefrom, Nullable<System.DateTime> dateto, Nullable<int> catid)
        {
            var datefromParameter = datefrom.HasValue ?
                new ObjectParameter("datefrom", datefrom) :
                new ObjectParameter("datefrom", typeof(System.DateTime));
    
            var datetoParameter = dateto.HasValue ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(System.DateTime));
    
            var catidParameter = catid.HasValue ?
                new ObjectParameter("catid", catid) :
                new ObjectParameter("catid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectNotPaydBycat_Result>("selectNotPaydBycat", datefromParameter, datetoParameter, catidParameter);
        }
    
        public virtual ObjectResult<SelectStudentReportAccount_Result> SelectStudentReportAccount(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> type, Nullable<int> iD)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectStudentReportAccount_Result>("SelectStudentReportAccount", fromDateParameter, toDateParameter, typeParameter, iDParameter);
        }
    
        public virtual ObjectResult<ShowAbcenseStude_Result> ShowAbcenseStude(Nullable<System.DateTime> datefrom, Nullable<System.DateTime> dateto, Nullable<int> catid)
        {
            var datefromParameter = datefrom.HasValue ?
                new ObjectParameter("datefrom", datefrom) :
                new ObjectParameter("datefrom", typeof(System.DateTime));
    
            var datetoParameter = dateto.HasValue ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(System.DateTime));
    
            var catidParameter = catid.HasValue ?
                new ObjectParameter("catid", catid) :
                new ObjectParameter("catid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowAbcenseStude_Result>("ShowAbcenseStude", datefromParameter, datetoParameter, catidParameter);
        }
    
        public virtual ObjectResult<ShowAbcenseStudeForStudent_Result> ShowAbcenseStudeForStudent(Nullable<System.DateTime> datefrom, Nullable<System.DateTime> dateto, Nullable<int> catid, Nullable<int> stuid)
        {
            var datefromParameter = datefrom.HasValue ?
                new ObjectParameter("datefrom", datefrom) :
                new ObjectParameter("datefrom", typeof(System.DateTime));
    
            var datetoParameter = dateto.HasValue ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(System.DateTime));
    
            var catidParameter = catid.HasValue ?
                new ObjectParameter("catid", catid) :
                new ObjectParameter("catid", typeof(int));
    
            var stuidParameter = stuid.HasValue ?
                new ObjectParameter("stuid", stuid) :
                new ObjectParameter("stuid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowAbcenseStudeForStudent_Result>("ShowAbcenseStudeForStudent", datefromParameter, datetoParameter, catidParameter, stuidParameter);
        }
    
        public virtual ObjectResult<ShowAbcenseStudeForStudentt_Result> ShowAbcenseStudeForStudentt(Nullable<System.DateTime> datefrom, Nullable<System.DateTime> dateto, Nullable<int> catid, Nullable<int> stuid)
        {
            var datefromParameter = datefrom.HasValue ?
                new ObjectParameter("datefrom", datefrom) :
                new ObjectParameter("datefrom", typeof(System.DateTime));
    
            var datetoParameter = dateto.HasValue ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(System.DateTime));
    
            var catidParameter = catid.HasValue ?
                new ObjectParameter("catid", catid) :
                new ObjectParameter("catid", typeof(int));
    
            var stuidParameter = stuid.HasValue ?
                new ObjectParameter("stuid", stuid) :
                new ObjectParameter("stuid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowAbcenseStudeForStudentt_Result>("ShowAbcenseStudeForStudentt", datefromParameter, datetoParameter, catidParameter, stuidParameter);
        }
    
        public virtual ObjectResult<ShowAttendanceByCatogery_Result> ShowAttendanceByCatogery(Nullable<System.DateTime> datefrom, Nullable<System.DateTime> dateto, Nullable<int> catid)
        {
            var datefromParameter = datefrom.HasValue ?
                new ObjectParameter("datefrom", datefrom) :
                new ObjectParameter("datefrom", typeof(System.DateTime));
    
            var datetoParameter = dateto.HasValue ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(System.DateTime));
    
            var catidParameter = catid.HasValue ?
                new ObjectParameter("catid", catid) :
                new ObjectParameter("catid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowAttendanceByCatogery_Result>("ShowAttendanceByCatogery", datefromParameter, datetoParameter, catidParameter);
        }
    
        public virtual ObjectResult<showcatogery_Result> showcatogery()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<showcatogery_Result>("showcatogery");
        }
    
        public virtual ObjectResult<showcatogerystudent_Result> showcatogerystudent()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<showcatogerystudent_Result>("showcatogerystudent");
        }
    
        public virtual ObjectResult<showExam_Result> showExam()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<showExam_Result>("showExam");
        }
    
        public virtual ObjectResult<ShowNotAttendStude_Result> ShowNotAttendStude(Nullable<System.DateTime> date, Nullable<int> catid)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var catidParameter = catid.HasValue ?
                new ObjectParameter("catid", catid) :
                new ObjectParameter("catid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowNotAttendStude_Result>("ShowNotAttendStude", dateParameter, catidParameter);
        }
    
        public virtual ObjectResult<ShowSection_Result> ShowSection()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowSection_Result>("ShowSection");
        }
    
        public virtual ObjectResult<showSections_Result> showSections()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<showSections_Result>("showSections");
        }
    
        public virtual ObjectResult<showStages_Result> showStages()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<showStages_Result>("showStages");
        }
    
        public virtual ObjectResult<ShowStudent_Result> ShowStudent()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowStudent_Result>("ShowStudent");
        }
    
        public virtual ObjectResult<showSubject_Result> showSubject()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<showSubject_Result>("showSubject");
        }
    
        public virtual int UpdateCatogaryDetails(string day, string time, Nullable<System.DateTime> datee, Nullable<int> id)
        {
            var dayParameter = day != null ?
                new ObjectParameter("day", day) :
                new ObjectParameter("day", typeof(string));
    
            var timeParameter = time != null ?
                new ObjectParameter("time", time) :
                new ObjectParameter("time", typeof(string));
    
            var dateeParameter = datee.HasValue ?
                new ObjectParameter("datee", datee) :
                new ObjectParameter("datee", typeof(System.DateTime));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCatogaryDetails", dayParameter, timeParameter, dateeParameter, idParameter);
        }
    
        public virtual int UpdateCatogaryDetailsNew(string day, string time, Nullable<System.DateTime> datee, Nullable<int> id)
        {
            var dayParameter = day != null ?
                new ObjectParameter("day", day) :
                new ObjectParameter("day", typeof(string));
    
            var timeParameter = time != null ?
                new ObjectParameter("time", time) :
                new ObjectParameter("time", typeof(string));
    
            var dateeParameter = datee.HasValue ?
                new ObjectParameter("datee", datee) :
                new ObjectParameter("datee", typeof(System.DateTime));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCatogaryDetailsNew", dayParameter, timeParameter, dateeParameter, idParameter);
        }
    
        public virtual int Updatecatogeries(string name, Nullable<int> stageid, Nullable<int> sectionid, Nullable<decimal> cost, Nullable<int> subid, Nullable<int> empid, Nullable<int> payedway, Nullable<int> id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var stageidParameter = stageid.HasValue ?
                new ObjectParameter("stageid", stageid) :
                new ObjectParameter("stageid", typeof(int));
    
            var sectionidParameter = sectionid.HasValue ?
                new ObjectParameter("sectionid", sectionid) :
                new ObjectParameter("sectionid", typeof(int));
    
            var costParameter = cost.HasValue ?
                new ObjectParameter("cost", cost) :
                new ObjectParameter("cost", typeof(decimal));
    
            var subidParameter = subid.HasValue ?
                new ObjectParameter("subid", subid) :
                new ObjectParameter("subid", typeof(int));
    
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            var payedwayParameter = payedway.HasValue ?
                new ObjectParameter("payedway", payedway) :
                new ObjectParameter("payedway", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Updatecatogeries", nameParameter, stageidParameter, sectionidParameter, costParameter, subidParameter, empidParameter, payedwayParameter, idParameter);
        }
    
        public virtual int UpdateEmpolyee(string name, string phone, string ssn, string address, Nullable<int> job_id, Nullable<int> user_id, Nullable<int> empolyee_id, Nullable<int> salary, Nullable<int> user_id2)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var ssnParameter = ssn != null ?
                new ObjectParameter("ssn", ssn) :
                new ObjectParameter("ssn", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var job_idParameter = job_id.HasValue ?
                new ObjectParameter("job_id", job_id) :
                new ObjectParameter("job_id", typeof(int));
    
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var empolyee_idParameter = empolyee_id.HasValue ?
                new ObjectParameter("Empolyee_id", empolyee_id) :
                new ObjectParameter("Empolyee_id", typeof(int));
    
            var salaryParameter = salary.HasValue ?
                new ObjectParameter("salary", salary) :
                new ObjectParameter("salary", typeof(int));
    
            var user_id2Parameter = user_id2.HasValue ?
                new ObjectParameter("user_id2", user_id2) :
                new ObjectParameter("user_id2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateEmpolyee", nameParameter, phoneParameter, ssnParameter, addressParameter, job_idParameter, user_idParameter, empolyee_idParameter, salaryParameter, user_id2Parameter);
        }
    
        public virtual int UpdateExam(string name, Nullable<decimal> high, Nullable<decimal> low, Nullable<int> id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var highParameter = high.HasValue ?
                new ObjectParameter("high", high) :
                new ObjectParameter("high", typeof(decimal));
    
            var lowParameter = low.HasValue ?
                new ObjectParameter("low", low) :
                new ObjectParameter("low", typeof(decimal));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateExam", nameParameter, highParameter, lowParameter, idParameter);
        }
    
        public virtual int UpdateSection(Nullable<int> id, Nullable<int> satageid, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var satageidParameter = satageid.HasValue ?
                new ObjectParameter("satageid", satageid) :
                new ObjectParameter("satageid", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSection", idParameter, satageidParameter, nameParameter);
        }
    
        public virtual int UpdateStages(Nullable<int> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateStages", idParameter, nameParameter);
        }
    
        public virtual int UpdateStudent(Nullable<int> satageid, Nullable<int> sectionid, string name, string address, string school, string phone1, string phone2, string notes, string barcode, Nullable<int> id, Nullable<int> catid, Nullable<int> status)
        {
            var satageidParameter = satageid.HasValue ?
                new ObjectParameter("satageid", satageid) :
                new ObjectParameter("satageid", typeof(int));
    
            var sectionidParameter = sectionid.HasValue ?
                new ObjectParameter("sectionid", sectionid) :
                new ObjectParameter("sectionid", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var schoolParameter = school != null ?
                new ObjectParameter("school", school) :
                new ObjectParameter("school", typeof(string));
    
            var phone1Parameter = phone1 != null ?
                new ObjectParameter("Phone1", phone1) :
                new ObjectParameter("Phone1", typeof(string));
    
            var phone2Parameter = phone2 != null ?
                new ObjectParameter("Phone2", phone2) :
                new ObjectParameter("Phone2", typeof(string));
    
            var notesParameter = notes != null ?
                new ObjectParameter("notes", notes) :
                new ObjectParameter("notes", typeof(string));
    
            var barcodeParameter = barcode != null ?
                new ObjectParameter("barcode", barcode) :
                new ObjectParameter("barcode", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var catidParameter = catid.HasValue ?
                new ObjectParameter("catid", catid) :
                new ObjectParameter("catid", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateStudent", satageidParameter, sectionidParameter, nameParameter, addressParameter, schoolParameter, phone1Parameter, phone2Parameter, notesParameter, barcodeParameter, idParameter, catidParameter, statusParameter);
        }
    
        public virtual int updateStudentcat(string studentname, Nullable<int> catid)
        {
            var studentnameParameter = studentname != null ?
                new ObjectParameter("studentname", studentname) :
                new ObjectParameter("studentname", typeof(string));
    
            var catidParameter = catid.HasValue ?
                new ObjectParameter("catid", catid) :
                new ObjectParameter("catid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateStudentcat", studentnameParameter, catidParameter);
        }
    
        public virtual int updatetSubject(string name, string nots, Nullable<int> id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var notsParameter = nots != null ?
                new ObjectParameter("nots", nots) :
                new ObjectParameter("nots", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updatetSubject", nameParameter, notsParameter, idParameter);
        }
    
        public virtual int UPDATEUSER(string username, string pasword, Nullable<int> id, Nullable<int> userID)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var paswordParameter = pasword != null ?
                new ObjectParameter("pasword", pasword) :
                new ObjectParameter("pasword", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATEUSER", usernameParameter, paswordParameter, idParameter, userIDParameter);
        }
    
        public virtual ObjectResult<VertifyEmpBySSNandName_Result> VertifyEmpBySSNandName(string ssn, string name)
        {
            var ssnParameter = ssn != null ?
                new ObjectParameter("ssn", ssn) :
                new ObjectParameter("ssn", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VertifyEmpBySSNandName_Result>("VertifyEmpBySSNandName", ssnParameter, nameParameter);
        }
    
        public virtual ObjectResult<VertifyJob_Result> VertifyJob(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VertifyJob_Result>("VertifyJob", idParameter);
        }
    
        public virtual ObjectResult<VertifyPerUser_Result> VertifyPerUser(Nullable<int> user_id, Nullable<int> page_id)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var page_idParameter = page_id.HasValue ?
                new ObjectParameter("page_id", page_id) :
                new ObjectParameter("page_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VertifyPerUser_Result>("VertifyPerUser", user_idParameter, page_idParameter);
        }
    
        public virtual ObjectResult<VertifyUser_Result> VertifyUser(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VertifyUser_Result>("VertifyUser", idParameter);
        }
    }
}
